generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @unique @default(autoincrement())
  firstName  String
  lastName   String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  email      String    @unique
  password   String
  role       Role      @default(BASIC)
  deleted_at DateTime?
}

model Category {
  id         Int       @id @unique @default(autoincrement())
  created_at DateTime  @default(now())
  name       String    @unique
  deleted_at DateTime?
  updated_at DateTime  @updatedAt
  products   Product[]
}

model ProductOwner {
  id         Int       @id @unique @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  name       String    @unique
  deleted_at DateTime?
  products   Product[]
}

model Product {
  id             Int            @id @unique @default(autoincrement())
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  name           String
  description    String?
  images         Image[]
  price          Int?
  brandId        Int?
  ownerId        Int?
  categoryId     Int?
  deleted_at     DateTime?
  imagesFolderId Int?
  status         Status         @default(AVAILABLE)
  category       Category?      @relation(fields: [categoryId], references: [id])
  owner          ProductOwner?  @relation(fields: [ownerId], references: [id])
  imagesFolder   ImagesFolder?  @relation(fields: [imagesFolderId], references: [id])
  brand       Brand?      @relation(fields: [brandId], references: [id])
  note           String?
}

model Brand {
  id         Int       @id @unique @default(autoincrement())
  created_at DateTime  @default(now())
  name       String    @unique
  deleted_at DateTime?
  updated_at DateTime  @updatedAt
  products   Product[]
}

model Image {
  id                 Int      @id @unique @default(autoincrement())
  originalName       String
  cloudinaryId       String
  cloudinaryPublicId String
  product            Product? @relation(fields: [productId], references: [id])
  productId          Int?
}

enum Role {
  BASIC
  ADMIN
}

enum Status {
  AVAILABLE
  BOOKED
  SOLD
}

model ImagesFolder {
  id        Int      @id @unique @default(autoincrement())
  name       String    @unique
  created_at DateTime  @default(now())
  deleted_at DateTime?
  updated_at DateTime  @updatedAt
  products   Product[]
}
